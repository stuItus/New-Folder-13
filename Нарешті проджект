#include "stdafx.h"
#include <GL/glut.h>

float WinWid=1200.0;
float WinHei=600.0;

void Draw()
{
        glClear(GL_COLOR_BUFFER_BIT);         
        glColor3f(0.0, 0.0, 0.0);

                                                                                                                                       //Початок Робота
                                glBegin(GL_LINE_STRIP);
        glVertex2f(-510, 255);
        glVertex2f(-510, 200);
        glVertex2f(-340, 200);
        glVertex2f(-340, 255);
                        glEnd();
                                glBegin(GL_LINE_STRIP);
        glVertex2f(-490, 200);
        glVertex2f(-482, 155);
        glVertex2f(-368, 155);
        glVertex2f(-360, 200);
                        glEnd();
                                glBegin(GL_LINE_STRIP);
        glVertex2f(-467, 155);
        glVertex2f(-459, 115);
        glVertex2f(-391, 115);
        glVertex2f(-383, 155);
                        glEnd();
                                glBegin(GL_LINE_STRIP);
        glVertex2f(-444, 115);
        glVertex2f(-436, 75);
        glVertex2f(-414, 75);
        glVertex2f(-406, 115);
                        glEnd();
                                glBegin(GL_LINE_STRIP);
        glVertex2f(-430, 75);
        glVertex2f(-430, -100);
        glVertex2f(-420, -100);
        glVertex2f(-420, 75);
                        glEnd();
								glBegin(GL_LINE_STRIP);
        glVertex2f(-440, -100);
        glVertex2f(-410, -100);
        glVertex2f(-403, -107);
        glVertex2f(-403, -137);
        glVertex2f(-410, -137);
        glVertex2f(-410, -109.5);
        glVertex2f(-412.5, -107);
        glVertex2f(-437.5, -107);
        glVertex2f(-440, -109.5);
        glVertex2f(-440, -137);
        glVertex2f(-447, -137);
        glVertex2f(-447, -107);
        glVertex2f(-440, -100);
                        glEnd();
                                                                                                                                  //Кінець робота
                                                                                                                                  //Початок планки
                                glBegin(GL_LINE_STRIP);
        glVertex2f(-585, 270);
        glVertex2f(585, 270);
        glVertex2f(585, 255);
        glVertex2f(-585, 255);
        glVertex2f(-585, 270);
                        glEnd();
								glBegin(GL_LINE_STRIP);
        glVertex2f(-575, 255);
        glVertex2f(-575, 230);
        glVertex2f(-565, 230);
        glVertex2f(-565, 255);
                        glEnd();
								 glBegin(GL_LINE_STRIP);
        glVertex2f(575, 255);
        glVertex2f(575, 230);
        glVertex2f(565, 230);
        glVertex2f(565, 255);
                        glEnd();
								glBegin(GL_LINE_STRIP);
        glVertex2f(-565, 250);
        glVertex2f(-563, 235);
        glVertex2f(-561, 250);
        glVertex2f(-559, 235);
        glVertex2f(-557, 250);
        glVertex2f(-555, 235);
                        glEnd();
								glBegin(GL_LINE_STRIP);
        glVertex2f(565, 250);
        glVertex2f(563, 235);
        glVertex2f(561, 250);
        glVertex2f(559, 235);
        glVertex2f(557, 250);
        glVertex2f(555, 235);
                        glEnd();
                                                                                                                                     //Кінець планки

                                                                                                                                     //Початок ялинки
                glColor3f(0.0, 1.0, 0.0);
                                glBegin(GL_LINE_STRIP);
        glVertex2f(410, -187);
        glVertex2f(410, -217);
        glVertex2f(430, -217);
        glVertex2f(430, -187);
                        glEnd();
						float z = 0, x = 0;
for(int i=0; i<6; i++)
        {
								glBegin(GL_LINE_LOOP);
        glColor3f(0.0, 1.0, 0.0);
        glVertex2f(260+x, -187+z); //a
        glVertex2f(260+x, -167+z); //b
        glVertex2f(580-x, -167+z); //c
        glVertex2f(580-x, -187+z); //d
        z += 30;
        x += 30;
						glEnd();
        }
                                                                                                                          //Кінець ялинки

                                                                                                                          //Підлога початок
								glBegin(GL_LINE_STRIP);
        glColor3f(0.0, 0.0, 0.0);
        glVertex2f(-600, -217);
        glVertex2f(600, -217);
						glEnd();
																						                                  //Підлога кінець
                       
																														  //Початок кульок
 float a = 0, b = 0,c = 0, d = 0;
 glPushMatrix();
 glColor3f(0.0f,0.0f,1.0f);
 glTranslatef(-380, -202.0, 0.0);
for(int i=0; i<2; i++)        //цикл для НЕПАРНИХ кульок
 {
GLUquadricObj * cylinder;
cylinder=gluNewQuadric();
gluQuadricDrawStyle(cylinder,GLU_LINE);        

glTranslatef(0.0-a, 0.0, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
glTranslatef(0.0+a-a/4, 0.0+b, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
glTranslatef(0.0-a, 0.0, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
glTranslatef(0.0+a/4, 0.0+b, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
a += 60;
b += 25;
 }
for(int i=0; i<2; i++)        //цикл для ПАРНИХ кульок
 {
GLUquadricObj * cylinder;
cylinder=gluNewQuadric();
gluQuadricDrawStyle(cylinder,GLU_LINE);        
glTranslatef(0.0+c/2, 0.0-2*d, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
glTranslatef(0.0-c, 0.0, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
glTranslatef(0.0+c-c/4, 0.0+d, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
glTranslatef(0.0+c/4, 0.0+d, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
glTranslatef(0.0-c/4, 0.0+d, 0.0);
gluCylinder(cylinder,15.0,15.0,0.1,100,4);
c += 60;
d += 25;
 }
glEnd();																											//Кінець кульок
glPopMatrix();
glutSwapBuffers();
}
void Initialize()
{
        glClearColor(1.0, 1.0, 1.0, 1.0);
        glMatrixMode(GL_PROJECTION);
        glLoadIdentity();
        glOrtho(-WinWid/2, WinWid/2, -WinHei/2, WinHei/2, -1.0, 1.0);
}


int main (int argc, char** argv)
{
        //Ініціалізація
        glutInit(&argc, argv);
        glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
        glutInitWindowSize(WinWid,WinHei);
        glutInitWindowPosition(100,200);
        glutCreateWindow("Проект");
        //Реєстрація
        glutDisplayFunc(Draw);//Малювання
        Initialize();
        glutMainLoop();

        return 0;
}
